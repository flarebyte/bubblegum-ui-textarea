module Bubblegum.TextArea.Internationalization exposing (..)

{-| Utility to translate some of the text used by the widget

    **generated** with make generate
-}

import Bubblegum.TextArea.IsoLanguage exposing (IsoLanguage(..))
import Tuple exposing (first, second)


pickSingularOrPlural : Int -> ( String, String ) -> String
pickSingularOrPlural howMany singularOrPlural =
    if howMany < 2 then
        first singularOrPlural

    else
        second singularOrPlural

translateWord : IsoLanguage -> Int -> String
translateWord language howMany =
    case language of
    {{#each @root}}
        {{#if Language}}{{! to skip other keys injected by whisker in root}}    
        {{Language}} ->
            pickSingularOrPlural howMany ( "{{Word}}", "{{Word}}" )
        {{/if}}
    {{/each}}

{{#each en}}
{{#with @key as | translationKey |}}
{{#ifSatisfy "not equals" translationKey "Word OR Words"}}
translate{{upperCamelCase translationKey}} : IsoLanguage -> String
translate{{upperCamelCase translationKey}} language =
    case language of
    {{#each @root as | translation |}}
        {{#if Language}}{{! to skip other keys injected by whisker in root}} 
        {{Language}} ->  
            "{{#with (lookup translation [translationKey])~}}{{this}}{{/with}}"
        {{/if}}
    {{/each}}
{{/ifSatisfy}}
{{/with}}

{{/each}}